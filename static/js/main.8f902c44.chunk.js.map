{"version":3,"sources":["services/firebase.js","features/auth/Login.js","features/education/educationSlice.js","features/excercise/excerciseSlice.js","components/ProgressBar/index.js","features/education/Education.js","features/education/newEducation.js","components/ProgressProvider/index.js","features/excercise/Excercise.js","features/excercise/newQuestion.js","features/excercise/newInteractiveQuestion.js","features/auth/authSlice.js","hooks/useAuthUser.js","layout/ResponsiveNavbar/index.js","features/auth/Account.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fbProvider","FacebookAuthProvider","ghProvider","GithubAuthProvider","googleProvider","GoogleAuthProvider","auth","db","storage","Facebook","styled","FaFacebook","Github","FaGithub","Google","FaGooglePlus","handleFbLogin","a","signInWithPopup","handleGhLogin","handleGoogleLogin","onClick","educationSlice","createSlice","name","initialState","activeWord","words","reducers","next","state","length","prev","updateEducation","action","payload","actions","selectWords","education","selectActiveWord","excerciseSlice","activeQuestion","activeInteractiveQuestion","checkIndex","activeSlices","points","finished","questionsVisible","questions","interactiveQuestions","nextQuestion","question","answers","map","answer","checked","correctAnswer","nextInteractiveQuestion","correctCode","winCode","join","slices","slice","toggleCheckbox","toggleToSentence","push","splice","indexOf","finishQuiz","restart","updateExcercise","selectQuestions","excercise","selectCheckIndex","selectActiveQuestion","selectInteractiveQuestions","selectActiveInteractiveQuestion","selectQuestionsVisible","selectActiveSlices","selectFinished","selectPoints","Progressbar","div","ProgressDone","ProgressBar","props","style","CirclePagination","Pagination","Content","Examples","WordImage","img","WordContent","ExcerciseBtn","Button","Counter","Progress","ArrowNavigation","Prev","Item","Next","Education","useSelector","history","useHistory","dispatch","useDispatch","modul","useParams","useEffect","console","log","collection","doc","get","result","data","fetchEducationAsync","Fragment","width","renderItem","item","margin","display","flexDirection","alignitems","PaginationItem","textAlign","page","translation","count","hidePrevButton","hideNextButton","src","image","content","color","fontWeight","exampleTranslation","example","useForm","register","handleSubmit","initialEducation","difficulty","useState","setEducation","exists","setExists","tempEducation","setTempEducation","setModul","setImage","url","setUrl","setProgress","onChange","e","mdl","target","value","then","catch","error","onSubmit","values","edc","Number","index","Array","prototype","apply","update","set","Input","fullWidth","placeholder","inputProps","key","inputRef","type","file","files","fileType","includes","handleChange","ref","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","newArr","handleUpdate","height","removeEducation","ProgressProvider","valueStart","valueEnd","children","setValue","Title","WordSlice","span","Word","WordsContent","Check","Checkbox","AnswersContent","AnswersList","List","InteractiveContent","Answer","SliceContainer","NextBtn","CircleBar","CircularProgressbar","EducationBtn","button","Excercise","hoverIndex","setHoverIndex","React","fetchExcerciseAsync","handleToggle","toggleSentence","ListItem","dense","ListItemIcon","tabIndex","disableRipple","id","className","onMouseEnter","onMouseLeave","floor","text","styles","root","transition","transitionDelay","path","stroke","strokeLinecap","trail","fill","fontSize","background","initialQuestion","setQuestions","tempQuestions","setTempQuestions","tempInteractiveQuestions","setTempInteractiveQuestions","q","removeQuestion","initialInteractiveQuestion","setInteractiveQuestions","int","interactiveQuestion","s","removeInteractiveQuestion","user","login","logout","selectCurrentUser","currentUser","unsubscribe","onAuthStateChanged","uid","email","ResponsiveToolbar","nav","NavList","ul","MenuIcon","SiteName","Menu","li","StyledLink","Link","ResponsiveNavbar","navLinks","hoverBackground","linkColor","navOpen","setNavOpen","useAuthUser","Icon","link","cursor","to","marginRight","icon","signOut","App","PrivateRoute","rest","render","location","pathname","from","basename","process","exact","component","Login","NewEducation","NewQuestion","NewInteractiveQuestion","Account","configureStore","reducer","educationReducer","excerciseReducer","authReducer","Boolean","window","hostname","match","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f902c44.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAawMFtv_5Sr5OZ58BFqDRw16rlsb_WHTQ\",\r\n    authDomain: \"learnenglish-eb67b.firebaseapp.com\",\r\n    databaseURL: \"https://learnenglish-eb67b.firebaseio.com\",\r\n    projectId: \"learnenglish-eb67b\",\r\n    storageBucket: \"learnenglish-eb67b.appspot.com\",\r\n    messagingSenderId: \"792888824683\",\r\n    appId: \"1:792888824683:web:195b4a98d7611af823f22e\",\r\n    measurementId: \"G-4WGZBSXH8G\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const fbProvider = new firebase.auth.FacebookAuthProvider();\r\n  const ghProvider = new firebase.auth.GithubAuthProvider();\r\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export const fbAuth = () =>\r\n  {\r\n    return firebase.auth().signInWithPopup(fbProvider);\r\n  }\r\n  export const ghAuth = () =>\r\n  {\r\n    return firebase.auth().signInWithPopup(ghProvider);\r\n  }\r\n  export const googleAuth = () =>\r\n  {\r\n    return firebase.auth().signInWithPopup(googleProvider);\r\n  }\r\n  \r\n  \r\n  export const auth = firebase.auth;\r\n  export const db = firebase.firestore();\r\n  export const storage = firebase.storage();\r\n","import React from 'react';\r\nimport { FaFacebook,FaGithub,FaGooglePlus } from \"react-icons/fa\";\r\nimport styled from 'styled-components';\r\nimport {fbAuth} from '../../services/firebase';\r\nimport {ghAuth} from '../../services/firebase';\r\nimport {googleAuth} from '../../services/firebase';\r\nimport {Avatar} from '@material-ui/core';\r\n\r\nconst Facebook = styled(FaFacebook)`\r\nfont-size : 100px;\r\nmargin : 10px;\r\ncursor:pointer;\r\n&:hover\r\n{\r\n    color : #3b5998;\r\n}\r\n\r\n`;\r\nconst Github = styled(FaGithub)`\r\nfont-size : 100px;\r\nmargin : 10px;\r\ncursor:pointer;\r\n&:hover\r\n{\r\n    color : #24292e;\r\n}\r\n`;\r\nconst Google = styled(FaGooglePlus)`\r\nfont-size : 100px;\r\nmargin : 10px;\r\ncursor:pointer;\r\n&:hover\r\n{\r\n    color : #dd4b39;\r\n}\r\n`;\r\n\r\nexport default () =>\r\n{\r\n    const handleFbLogin = async () => \r\n    {\r\n        const data = await fbAuth();\r\n    }\r\n\r\n    const handleGhLogin = async () => \r\n    {\r\n        const data = await ghAuth();\r\n    }\r\n\r\n    const handleGoogleLogin = async () => \r\n    {\r\n        const data = await googleAuth();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n        <Facebook onClick = { () => handleFbLogin() } />\r\n        <Google onClick = { () => handleGoogleLogin()} />\r\n        <Github onClick = { () => handleGhLogin() } />\r\n      \r\n           \r\n\r\n        </div>\r\n    );\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport { db } from '../../services/firebase';\r\nexport const educationSlice = createSlice({\r\n  name: 'education',\r\n  initialState: {\r\n    activeWord: 0,\r\n      words: []\r\n    }\r\n    ,\r\n    reducers: {\r\n      next: state => {\r\n      state.activeWord = state.activeWord === state.words.length -1\r\n       ? 0\r\n       : state.activeWord += 1 ;\r\n        \r\n      },\r\n      prev: state => {\r\n       state.activeWord = state.activeWord === 0 \r\n       ? state.words.length-1  \r\n       : state.activeWord -= 1;\r\n      },\r\n      updateEducation : (state,action) => {\r\n        state.words = action.payload;\r\n      }\r\n  }\r\n})\r\nexport const {next,prev,updateEducation} = educationSlice.actions;\r\nexport const selectWords =  state => state.education.words;\r\nexport const selectActiveWord = state => state.education.activeWord;\r\nexport const fetchEducationAsync = modul => async dispatch => {\r\n  const result = await db.collection('education').doc(modul).get();\r\n  dispatch(updateEducation(result.data().education));\r\n};\r\n\r\nexport default educationSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\r\nimport { db } from '../../services/firebase';\r\n\r\n\r\nexport const excerciseSlice = createSlice({\r\n  name: 'excercise',\r\n  initialState: {\r\n    activeQuestion: 0,\r\n    activeInteractiveQuestion: null,\r\n    checkIndex : null,\r\n    activeSlices : [],\r\n    points:0,\r\n    finished: false,\r\n    questionsVisible: null,\r\n    questions:[],\r\n    interactiveQuestions:[]\r\n   },\r\n    reducers:{\r\n      nextQuestion : state =>\r\n      {\r\n        \r\n        const question = state.questions[state.activeQuestion];\r\n        question.answers.map( answer => answer.checked = false);\r\n        state.points += state.checkIndex === question.correctAnswer ? 1 : 0;\r\n        state.activeQuestion += state.activeQuestion === state.questions.length-1 ? 0 : 1;\r\n\r\n        state.checkIndex = null;\r\n      },\r\n      nextInteractiveQuestion : state =>\r\n      {\r\n        if(state.activeInteractiveQuestion !== null)\r\n        {\r\n          const correctCode = state.interactiveQuestions[state.activeInteractiveQuestion].winCode;\r\n          state.points += state.activeSlices.join('') === correctCode ? 1 : 0;\r\n        }\r\n        \r\n        state.questionsVisible = false;\r\n        state.activeInteractiveQuestion += state.activeInteractiveQuestion === state.interactiveQuestions.length-1 || state.activeInteractiveQuestion === null ? 0 : 1;\r\n        const slices = state.interactiveQuestions[state.activeInteractiveQuestion].slices;\r\n        slices.map( slice => slice.checked = false);\r\n        state.activeSlices = [];\r\n      },\r\n      toggleCheckbox : (state,action) =>\r\n      {\r\n        const answers = state.questions[state.activeQuestion].answers;\r\n        answers.map( answer => answer.checked = false);\r\n        state.checkIndex = action.payload;\r\n        answers[action.payload].checked = true;\r\n\r\n      },\r\n      toggleToSentence : (state,action) => \r\n      {\r\n      const slice = state.interactiveQuestions[state.activeInteractiveQuestion].slices[action.payload]; \r\n      slice.checked = !slice.checked;\r\n      slice.checked ? state.activeSlices.push(action.payload) : state.activeSlices.splice(state.activeSlices.indexOf(action.payload),1);\r\n      \r\n      },\r\n      finishQuiz : (state) => \r\n      {\r\n        const correctCode = state.interactiveQuestions[state.activeInteractiveQuestion].winCode;\r\n        state.points += state.activeSlices.join('') === correctCode ? 1 : 0;\r\n        state.finished = true;\r\n      },\r\n      restart: (state) => {\r\n        \r\n        state.questionsVisible = null;\r\n        state.activeQuestion = 0;\r\n        state.activeInteractiveQuestion = null;\r\n        state.points = 0;\r\n        state.finished = false;\r\n       \r\n      },\r\n      updateExcercise : (state,action) =>\r\n      {\r\n        state.questions = action.payload.questions;\r\n        state.interactiveQuestions = action.payload.interactiveQuestions;\r\n        state.questions.map( question => question.answers.map(answer => answer.checked = false));\r\n        state.questionsVisible = true;\r\n      }\r\n    }\r\n})\r\nexport const {nextQuestion, nextInteractiveQuestion, toggleToSentence,restart,toggleCheckbox,finishQuiz,updateExcercise} = excerciseSlice.actions;\r\nexport const selectQuestions = state => state.excercise.questions;\r\nexport const selectCheckIndex = state => state.excercise.checkIndex;\r\nexport const selectActiveQuestion = state => state.excercise.activeQuestion;\r\nexport const selectInteractiveQuestions = state => state.excercise.interactiveQuestions;\r\nexport const selectActiveInteractiveQuestion = state => state.excercise.activeInteractiveQuestion\r\nexport const selectQuestionsVisible = state => state.excercise.questionsVisible;\r\nexport const selectActiveSlices = state => state.excercise.activeSlices;\r\nexport const selectFinished = state => state.excercise.finished;\r\nexport const selectPoints = state => state.excercise.points;\r\nexport const fetchExcerciseAsync = modul => async dispatch => {\r\n  console.log(modul);\r\n  const result = await db.collection('excercise').doc(modul).get();\r\n  dispatch(updateExcercise(result.data()));\r\n};\r\nexport default excerciseSlice.reducer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Progressbar = styled.div`\r\n    background-color: #d8d8d8;\r\n\tborder-radius: 20px;\r\n\tmargin: 10px 0;\r\n\theight: 16px;\r\n    width: 100%;`;\r\n\r\n    const ProgressDone = styled.div`\r\n\tbackground: #CA6082;\r\n\ttransition: all 1s;\r\n\tbox-shadow: 0 1px 1px -3px palevioletred, 0 1px 3px #333;\r\n\tborder-radius: 20px;\r\n\tcolor: #fff;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\theight: 100%; `;\r\n    \r\nfunction ProgressBar(props) {\r\n    return (\r\n       <Progressbar >\r\n          <ProgressDone style = {props.style}></ProgressDone>\r\n       </Progressbar>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectActiveWord, selectWords, next ,prev,fetchEducationAsync } from './educationSlice';\r\nimport { restart } from '../excercise/excerciseSlice';\r\nimport ProgressBar from '../../components/ProgressBar';\r\nimport styled from 'styled-components';\r\nimport { Button } from '@material-ui/core';\r\nimport { Pagination, PaginationItem } from '@material-ui/lab';\r\nimport{ useParams } from \"react-router-dom\";\r\n\r\n\r\nconst CirclePagination = styled(Pagination)`\r\n&&\r\n{\r\n  width:200px;\r\n  ul{\r\n    display:flex;\r\n    flex-direction:column;\r\n  }\r\n  \r\n  & .MuiPaginationItem-ellipsis\r\n  {\r\n    color : palevioletred;\r\n    font-size : 18px;\r\n  }\r\n  & .Mui-selected\r\n  {\r\n    opacity:1;\r\n    background:palevioletred;\r\n    \r\n    &:hover\r\n    {\r\n      cursor : default;\r\n      background:palevioletred;\r\n    }\r\n  }\r\n\r\n button\r\n  {\r\n   \r\n   background:palevioletred;\r\n   color: #fff;\r\n   opacity: 0.2;\r\n  \r\n   \r\n   &:hover\r\n   {\r\n     opacity:1;\r\n   }\r\n  \r\n  }\r\n  li > div\r\n  {\r\n    color: #c7c7c7;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\r\n    font-weight : 700;\r\n    font-size : 18px; \r\n  }\r\n}\r\n`;\r\n\r\nconst Content = styled.div`\r\ndisplay:flex;\r\nflex-direction:rows;\r\nalign-items : center;\r\nheight:400px;\r\nwidth:100%;\r\njustify-content: space-around;\r\n`;\r\n\r\nconst Examples = styled.div`\r\nfont-size : 18px;\r\ntext-align : left;\r\npadding: 0 15px;\r\nheight:100%;\r\n`;\r\n\r\nconst WordImage = styled.img`\r\nwidth: 350px;\r\n@media screen and (max-width: 759px)\r\n{\r\n  width:250px;\r\n}\r\n`;\r\n\r\nconst WordContent = styled.div`\r\ncolor : #c7c7c7;\r\nfont-size:21px;\r\nmargin:5px;\r\n`;\r\n\r\nconst ExcerciseBtn = styled(Button)`\r\n&&\r\n{\r\n    color: #fff;\r\n    display:inline-block;\r\n    background: #CA6082;\r\n    font-size: 14px;\r\n    border-radius : 16px;\r\n    &:hover {\r\n      background-color: #DB7093;\r\n    }\r\n}`;\r\n\r\nconst Counter = styled.div`\r\nmargin-bottom:10px;\r\n`;\r\n \r\nconst Progress = styled.div`\r\nwidth:80%;\r\n`;\r\n\r\nconst ArrowNavigation = styled.div`\r\nwidth:100%;\r\ndisplay:flex;\r\nflex-direction: row;\r\njustify-content: center;\r\nalign-items: center\r\n`;\r\n\r\nconst Prev = styled.div`\r\nbackground-color: #ddd;\r\ncursor:pointer;\r\ncolor: #888;\r\nwidth : 20px;\r\nborder-radius : 100%;\r\npadding :5px 16px 9px 16px;\r\nfont-size:24px;\r\nmargin : 0 20px;\r\n&:hover\r\n{\r\n  background-color: #ccc;\r\n  color: #222;\r\n}`;\r\n\r\nconst Item = styled.div`\r\nflex: 1 0 21%;\r\ndisplay:flex;\r\njustify-content: center;\r\nmargin: 5px;`;\r\n\r\nconst Next = styled.div`\r\nbackground-color: #ddd;\r\ncursor:pointer;\r\ncolor: #888;\r\nwidth : 20px;\r\nborder-radius : 100%;\r\npadding :5px 16px 9px 16px;\r\nfont-size:24px;\r\nmargin : 0 20px;\r\n&:hover\r\n{\r\n  background-color: #ccc;\r\n  color: #222;\r\n}`;\r\n\r\nconst Education = () =>\r\n{\r\n    const words = useSelector(selectWords);\r\n    const activeWord = useSelector(selectActiveWord);\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const {modul} = useParams();\r\n\r\n    useEffect( () =>\r\n     {\r\n      console.log(modul);\r\n      dispatch(fetchEducationAsync(modul));\r\n    },[modul] )\r\n\r\n    const excercise = () =>\r\n    {\r\n      dispatch(restart());\r\n      history.push(`/excercise/${modul}`);\r\n    }\r\n    \r\n    \r\n    return (\r\n        <React.Fragment>\r\n          {words.length > 0 && <>\r\n          <Progress>\r\n          <Counter>{`${activeWord + 1} / ${words.length}`}</Counter>\r\n            <ProgressBar style ={{ width:`${((activeWord + 1) / words.length) *100}%`}}></ProgressBar>\r\n          </Progress>\r\n          <Content>\r\n            <CirclePagination renderItem={(item) => (\r\n                <div style = {{ margin:'2px 10px', width : '200px',display:'flex',flexDirection : 'row',alignitems : 'flex-start' }}><PaginationItem {...item} /><div style = {{margin: '0 5px',textAlign : 'left'}}>{item.page-1 !== -1 ?words[item.page-1].translation : ''}</div></div>\r\n              )} page = {activeWord + 1} count={words.length} hidePrevButton hideNextButton />\r\n          <div style= {{width :'400px'}}>\r\n          <WordImage src ={words[activeWord].image}/>\r\n          <WordContent>{words[activeWord].content} - {words[activeWord].translation}</WordContent>\r\n          </div>\r\n          <Examples>\r\n            <span style = {{color : 'palevioletred',fontWeight:700}}>Examples</span>\r\n            <br/><br/>\r\n          <span style= {{fontWeight:700}}>{words[activeWord].exampleTranslation}</span> - {words[activeWord].example}\r\n          </Examples>\r\n          </Content>\r\n          <ArrowNavigation>\r\n          <Item><Prev onClick = { () => dispatch(prev()) }>&#8249;</Prev></Item>\r\n          <ExcerciseBtn onClick = { () => excercise() }>Excercise</ExcerciseBtn>\r\n          <Item><Next onClick = { () => dispatch(next()) }>&#8250;</Next></Item>\r\n          </ArrowNavigation>\r\n          </>}\r\n        </React.Fragment>\r\n      );\r\n}\r\n\r\nexport default Education;","import React, { useState } from 'react';\r\nimport { Input, Button } from '@material-ui/core/';\r\nimport styled from 'styled-components';\r\nimport { useForm } from 'react-hook-form';\r\nimport { db, storage } from '../../services/firebase';\r\n\r\nexport default () => {\r\n\r\n  const { register, handleSubmit} = useForm();\r\n\r\n  const initialEducation = {\r\n    content: '',\r\n    translation: '',\r\n    image:'',\r\n    example:'',\r\n    exampleTranslation: '',\r\n    difficulty:0\r\n    \r\n  }\r\n \r\n  const [ education, setEducation ] = useState([initialEducation]);\r\n  const [ exists, setExists ] = useState(false);\r\n  const [ tempEducation, setTempEducation ] = useState([]);\r\n  const [ modul, setModul ] = useState('');\r\n  const [ image, setImage ] = useState(null);\r\n  const [ url, setUrl ] = useState('');\r\n  const [ progress, setProgress ] = useState(0);\r\n\r\n\r\n\r\n\r\n  const addEducation = () => {\r\n    setEducation([...education, initialEducation])\r\n  }\r\n\r\n  const removeEducation = () => {\r\n    const newArr = [...education];\r\n    newArr.splice(education.length-1, 1);\r\n    setEducation(newArr);\r\n  }\r\n  \r\n  const onChange = async (e) => \r\n  {\r\n    const mdl = e.target.value;\r\n    setModul(mdl);\r\n    await db.collection(\"education\").doc(mdl).get().then(function(doc) {\r\n    if (doc.exists) {\r\n        setTempEducation(doc.data().education);\r\n        setExists(true);\r\n        console.log(\"Document data:\", doc.data().education);\r\n    } else {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n        setExists(false);\r\n    }\r\n}).catch(function(error) {\r\n    console.log(\"Error getting document:\", error);\r\n});\r\n     \r\n  }\r\n\r\n  const onSubmit = async values => {\r\n    values.education.map(edc => {edc.difficulty = Number(edc.difficulty)});\r\n    values.education.map((edc, index) => edc.image = education[index].image);\r\n    console.log(values.education);\r\n    if(exists)\r\n    {\r\n    Array.prototype.push.apply(tempEducation,values.education);\r\n    await db.collection('education').doc(modul).update({\r\n      education : tempEducation\r\n    });\r\n    }\r\n    else\r\n    {\r\n\r\n      await db.collection('education').doc(modul).set({\r\n        education : values.education\r\n      });\r\n    }\r\n  };\r\n\r\nconst clear = () =>\r\n{\r\n  setEducation([]);\r\n}\r\nconst handleChange = (e) =>\r\n{\r\n  const file = e.target.files[0];\r\n  if(file)\r\n  { \r\n    const fileType = file['type'];\r\n    const validImageTypes = ['image/gif','image/jpeg','image/png'];\r\n    if(validImageTypes.includes(fileType))\r\n    {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  }\r\n}\r\nconst handleUpdate = (index) => {\r\n    if (image) {\r\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n  \r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {\r\n          const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n          setProgress(progress);\r\n        },\r\n        error => {\r\n          \r\n          console.log(error);\r\n        },\r\n        () => {\r\n       \r\n          storage\r\n            .ref(\"images\")\r\n            .child(image.name) \r\n            .getDownloadURL() \r\n            .then(url => {\r\n              console.log(url);\r\n              setUrl(url);\r\n              let newArr = [...education];\r\n              newArr[index].image = url;\r\n              setEducation(newArr);\r\n              setProgress(0);\r\n            });\r\n        }\r\n      );\r\n    } \r\n  };\r\n  return(\r\n    <div>\r\n      <p>Utwórz nowe słowa</p>\r\n     \r\n      <form onSubmit={handleSubmit(onSubmit)} >\r\n      <Input\r\n              fullWidth\r\n              name={`modul`}\r\n              onChange = { (e) => onChange(e) }\r\n              placeholder={`Moduł`} \r\n              inputProps={{ 'aria-label': `modul` }}\r\n            />\r\n        {education.map((edc, index) =>\r\n          <div key={`education${index}`}>\r\n            <Input\r\n              fullWidth\r\n              name={`education[${index}].content`}\r\n              inputRef={register()}\r\n              placeholder={`Słowo ${index+1}`}\r\n              inputProps={{ 'aria-label': `słowo ${index+1}` }}\r\n            />\r\n             <Input\r\n          fullWidth\r\n          name={`education[${index}].translation`}\r\n          inputRef={register()}\r\n          placeholder={`Tłumaczenie ${index+1}`}\r\n          inputProps={{ 'aria-label': `translation ${index+1}` }}\r\n        />\r\n        <Input\r\n              fullWidth\r\n              name={`education[${index}].example`}\r\n              inputRef={register()}\r\n              placeholder={`Przykład `}\r\n              inputProps={{ 'aria-label': `example` }}\r\n            />\r\n             <Input\r\n          fullWidth\r\n          name={`education[${index}].exampleTranslation`}\r\n          inputRef={register()}\r\n          placeholder=\"Tłumaczenie\"\r\n          inputProps={{ 'aria-label': 'exampleTranslation' }}\r\n        />\r\n           <Input\r\n          type = 'number'\r\n          name={`education[${index}].difficulty`}\r\n          inputRef={register()}\r\n          placeholder=\"Trudność\"\r\n          inputProps={{ 'aria-label': 'difficulty' }}\r\n        />\r\n        <div >\r\n          {\r\n          //it will be progressbar when i am gonna style it \r\n}\r\n        <Input\r\n        name={`education[${index}].image`}\r\n        type ='file'\r\n        onChange = {(e) => handleChange(e)}\r\n        />\r\n        <Button onClick ={() => handleUpdate(index)}>update</Button>\r\n        {\r\n          url ? <img width='350px' src = {edc.image}  /> : <img width='350' height = '200'/>\r\n        }\r\n        </div>\r\n          </div>\r\n        )}\r\n        <Button onClick={ () => addEducation() }>Dodaj słowo</Button>\r\n        <Button onClick={ () => removeEducation() }>Usuń słowo</Button>\r\n        <Button onClick={ () => clear() }>Wyczyść</Button>\r\n        <Button type=\"submit\">Utwórz słowa</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React,{useState,useEffect} from \"react\";\r\n\r\nconst ProgressProvider = ({ valueStart, valueEnd, children }) => {\r\n  const [value, setValue] = useState(valueStart);\r\n  useEffect(() => \r\n  {\r\n    setValue(valueEnd);\r\n  }, [valueEnd]);\r\n\r\n  return children(value);\r\n};\r\nexport default ProgressProvider;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    selectQuestionsVisible,\r\n    selectQuestions,\r\n    selectActiveQuestion,\r\n    selectInteractiveQuestions,\r\n    selectActiveInteractiveQuestion,\r\n    selectActiveSlices,\r\n    selectFinished,\r\n    selectPoints,\r\n    nextQuestion,\r\n    nextInteractiveQuestion,\r\n    toggleToSentence,\r\n    toggleCheckbox,\r\n    finishQuiz,\r\n    fetchExcerciseAsync,\r\n    selectCheckIndex\r\n     } from './excerciseSlice';\r\nimport ProgressBar from '../../components/ProgressBar';\r\nimport styled from 'styled-components';\r\nimport { Button, List, ListItem, ListItemIcon, Checkbox } from '@material-ui/core';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport ProgressProvider from '../../components/ProgressProvider';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport{ useParams } from \"react-router-dom\";\r\n\r\nconst Progress = styled.div`\r\nwidth:80%;`;\r\n\r\nconst Title = styled.div`\r\nmargin:20px 0;\r\nwidth:100%`;\r\n\r\nconst WordSlice = styled.span`\r\nborder-radius: 16px;\r\nbackground:#c7c7c7;\r\ncolor:transparent;\r\npadding:5px;\r\nfont-size:18px;\r\nmargin:10px;\r\nborder: solid 2px #c7c7c7;\r\nuser-select: none;`;\r\n\r\nconst Word = styled.span`\r\n    background: none;\r\n    color : #c7c7c7;\r\n    font-size:18px;\r\n    border-radius: 16px;\r\n    padding:5px;\r\n    margin:10px;\r\n    border: solid 2px #c7c7c7;\r\n    cursor:pointer;\r\n    &.active\r\n    {\r\n        background: #ddd;\r\n        border: solid 2px #b6b6b6;\r\n        color: #b6b6b6;\r\n    }`;\r\n\r\nconst WordsContent = styled.div`\r\n    width:60%;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    flex-wrap: wrap;\r\n    @media screen and (max-width: 759px)\r\n    {\r\n        width:80%;\r\n    }`;\r\n\r\nconst Check = styled(Checkbox)`\r\nsvg{\r\n    color: palevioletred;\r\n  }`;\r\n\r\nconst AnswersContent = styled.div`\r\nwidth:100%;\r\ndisplay:flex;\r\nflex-direction: column;\r\nalign-items: center;\r\njustify-content: space-evenly;\r\nheight: 300px`;\r\n\r\nconst AnswersList = styled(List)`\r\nwidth: 40%;\r\n@media screen and (max-width: 759px)\r\n    {\r\n      width:100%\r\n    }`;\r\n\r\nconst InteractiveContent = styled.div`\r\nwidth:100%;\r\ndisplay:flex;\r\nflex-direction: column;\r\nalign-items: center;\r\njustify-content: space-evenly;\r\nheight: 300px`;\r\n\r\nconst Answer = styled.div`\r\nwidth : 100%;`;\r\n\r\nconst SliceContainer = styled.div`\r\nmin-width:80%;\r\nborder-bottom: solid 2px #c7c7c7;\r\nheight: 50px;\r\nmargin-bottom: 32px;\r\n`;\r\n\r\nconst NextBtn = styled(Button)`\r\n&&\r\n{\r\n    color: #c7c7c7;\r\n    font-size: 14px;\r\n    border : solid 2px #c7c7c7; \r\n    border-radius : 16px;\r\n}`;\r\n\r\nconst CircleBar = styled(CircularProgressbar)`\r\n@media screen and (max-width: 759px)\r\n    {\r\n        width:60%;\r\n    }\r\n`;\r\n\r\nconst EducationBtn = styled.button`\r\n    color: #fff;\r\n    background: #CA6082;\r\n    font-size: 14px;\r\n    padding: 10px 16px;\r\n    cursor : pointer;\r\n    outline: none;\r\n    min-width: 64px;\r\n    border-radius: 16px;\r\n    border : none;\r\n    letter-spacing: 0.02857em;\r\n    text-transform: uppercase;\r\n    user-select: none;\r\n    &:hover\r\n    {\r\n      background:#DB7093;\r\n    }\r\n    `;\r\n\r\nconst Excercise = () =>\r\n{\r\n    const questions = useSelector(selectQuestions);\r\n    const activeQuestion = useSelector(selectActiveQuestion);\r\n    const interactiveQuestions = useSelector(selectInteractiveQuestions);\r\n    const activeInteractiveQuestion = useSelector(selectActiveInteractiveQuestion);\r\n    const questionsVisible = useSelector(selectQuestionsVisible);\r\n    const activeSlices = useSelector(selectActiveSlices);\r\n    const finished = useSelector(selectFinished);\r\n    const points = useSelector(selectPoints);\r\n    const checkIndex = useSelector(selectCheckIndex);\r\n    let history = useHistory();\r\n    const { modul } = useParams();\r\n    const [ hoverIndex, setHoverIndex ] = useState(-1);\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect( () => \r\n    {\r\n      console.log(modul);\r\n      dispatch(fetchExcerciseAsync(modul));\r\n    },[modul] )\r\n\r\n    const handleToggle = (index) => () => \r\n    {\r\n      if( checkIndex !== index ) dispatch(toggleCheckbox(index));\r\n    }\r\n\r\n    const onClick = () =>\r\n    {\r\n       if(activeQuestion <= questions.length - 1 && questionsVisible)dispatch(nextQuestion()) ;\r\n       if(activeQuestion >= questions.length - 1) \r\n        {\r\n           activeInteractiveQuestion < interactiveQuestions.length-1 ? \r\n           dispatch(nextInteractiveQuestion()) : dispatch(finishQuiz());\r\n        }   \r\n    }\r\n    \r\n    const toggleSentence = (index) =>\r\n    {\r\n    dispatch(toggleToSentence(Number(index)));\r\n    setHoverIndex(-1);\r\n    }\r\n\r\n    \r\n    const educate = () =>\r\n    {\r\n      history.push(`/education/${modul}`);\r\n    }\r\n    return (\r\n        \r\n   <React.Fragment>\r\n       \r\n       {!finished && <> \r\n       <Progress>\r\n       <ProgressBar style ={{ width:`${((activeQuestion + activeInteractiveQuestion + (questionsVisible ? 1 :2))/(questions.length + interactiveQuestions.length)) *100}%`}}/>\r\n     </Progress>\r\n    {questionsVisible === true && <>\r\n    <AnswersContent>\r\n     <Title>{questions[activeQuestion].content}</Title>\r\n        <AnswersList >\r\n    {questions[activeQuestion]?.answers?.map((answer,index) =>\r\n          <ListItem key = {`question-${activeQuestion}-answer-${index}`} dense button onClick = { handleToggle(index) } >\r\n            <ListItemIcon>\r\n              <Check\r\n                checked = {answer.checked}\r\n                tabIndex = {-1}\r\n                disableRipple\r\n                onClick = { handleToggle(index) }\r\n              />\r\n            </ListItemIcon>\r\n            <Answer key={index}>{answer.content}</Answer>\r\n          </ListItem>)}\r\n    </AnswersList>\r\n   \r\n    </AnswersContent>\r\n    </> }\r\n    {questionsVisible === null && <>\r\n      <AnswersContent>\r\n      Loading...\r\n      {\r\n      //it will be loader\r\n       }\r\n      </AnswersContent>\r\n\r\n    </>}\r\n    {questionsVisible === false && <>\r\n<InteractiveContent>\r\n    <Title>{interactiveQuestions[activeInteractiveQuestion].content}</Title>\r\n    <SliceContainer>{\r\n    activeSlices.map((id) => \r\n    interactiveQuestions[activeInteractiveQuestion].slices[id].checked ? <Word \r\n     className = {hoverIndex === id ? 'active' : ''} \r\n     onClick = {() => toggleSentence(id)}\r\n     onMouseEnter = {() => setHoverIndex(id)}\r\n     onMouseLeave = { () => setHoverIndex(-1) } \r\n     key={id}>{ interactiveQuestions[activeInteractiveQuestion].slices[id].content}</Word> : '')}\r\n     </SliceContainer>\r\n    <WordsContent>{interactiveQuestions[activeInteractiveQuestion].slices.map((slice,index) => \r\n    \r\n     !slice.checked ? <Word className = {hoverIndex === index ? 'active' : ''}\r\n     onClick = {() => toggleSentence(index)}\r\n     onMouseEnter = {() => setHoverIndex(index)}\r\n     onMouseLeave = { () => setHoverIndex(-1) } \r\n    key={index}>{slice.content}</Word> : <WordSlice key={index}>{slice.content}</WordSlice>)}\r\n     </WordsContent>\r\n    </InteractiveContent>\r\n </>}\r\n    <NextBtn onClick = { () => onClick()} >Next</NextBtn>\r\n    </>}\r\n     { finished && <>\r\n     <div>Your score : {points} / {questions.length + interactiveQuestions.length}</div>\r\n     <div>\r\n       <ProgressProvider valueStart={0} valueEnd={Math.floor((points) / (questions.length + interactiveQuestions.length) * 100)}>\r\n       {value => \r\n        <CircleBar\r\n        value = {value} \r\n        text={`${value}%`}\r\n        styles={{\r\n          root: {\r\n            transition: 'all 0.5s ease 0s ',\r\n            transitionDelay: '0.1s'\r\n          },\r\n          path: {\r\n            stroke: 'palevioletred',\r\n            strokeLinecap: 'butt',\r\n            \r\n          },\r\n          trail: {\r\n            stroke: '#d6d6d6',\r\n          },\r\n          text: {\r\n            fill: 'palevioletred',\r\n            fontSize: '30px',\r\n          },\r\n          background: {\r\n            fill: '#3e98c7',\r\n          }\r\n          }}/>}\r\n        </ProgressProvider>\r\n        </div>\r\n        <EducationBtn onClick = { () => educate() }>Educate</EducationBtn>\r\n        \r\n  </>}\r\n       </React.Fragment>\r\n      );\r\n \r\n\r\n}\r\n\r\nexport default Excercise;","import React from 'react';\r\nimport { Input, Button } from '@material-ui/core/';\r\nimport styled from 'styled-components';\r\nimport { useForm } from 'react-hook-form';\r\nimport { db } from '../../services/firebase';\r\n\r\nexport default () => {\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const initialQuestion = {\r\n    content: '',\r\n    correctAnswer: 0,\r\n    difficulty: null,\r\n    answers: [\r\n      { content: ''},\r\n      { content: ''},\r\n      { content: ''},\r\n      { content: ''},\r\n    ]\r\n  }\r\n \r\n  const [ questions, setQuestions ] = React.useState([initialQuestion]);\r\n  const [ exists, setExists ] = React.useState(false);\r\n  const [ tempQuestions, setTempQuestions ] = React.useState([]);\r\n  const [ tempInteractiveQuestions, setTempInteractiveQuestions ] = React.useState([]);\r\n  const [ modul, setModul ] = React.useState('');\r\n  \r\n\r\n  const addQuestion = () => \r\n  {\r\n    setQuestions([...questions, initialQuestion])\r\n  }\r\n\r\n  const removeQuestion = () =>\r\n   {\r\n    const newArr = [...questions];\r\n    newArr.splice(questions.length-1, 1);\r\n    setQuestions(newArr);\r\n  }\r\n  \r\n  const onChange = async (e) => \r\n  {\r\n    const mdl = e.target.value;\r\n    setModul(mdl);\r\n    await db.collection(\"excercise\").doc(mdl).get().then(function(doc) {\r\n    if (doc.exists)\r\n     {\r\n        setTempQuestions(doc.data().questions);\r\n        setTempInteractiveQuestions(doc.data().interactiveQuestions);\r\n        setExists(true);\r\n        console.log(\"Document data:\", doc.data().questions);\r\n    }\r\n     else \r\n     {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n        setExists(false);\r\n    }\r\n}).catch(function(error)\r\n {\r\n    console.log(\"Error getting document:\", error);\r\n});\r\n     \r\n  }\r\n\r\n  const onSubmit = async values =>\r\n   {\r\n    values.questions.map( question => {question.correctAnswer = Number(question.correctAnswer)}).correctAnswer = Number(values.questions[0].correctAnswer);\r\n    values.questions.map(question => {question.difficulty = Number(question.difficulty)});\r\n    if(exists)\r\n    {\r\n    Array.prototype.push.apply(tempQuestions,values.questions);\r\n    await db.collection('excercise').doc(modul).update({\r\n      questions : tempQuestions,\r\n      interactiveQuestions : tempInteractiveQuestions\r\n    });\r\n    }\r\n    else\r\n    {\r\n      await db.collection('excercise').doc(modul).set({\r\n        questions : values.questions,\r\n        interactiveQuestions : tempInteractiveQuestions\r\n      });\r\n    }\r\n  };\r\n\r\nconst clear = () =>\r\n{\r\n  setQuestions([]);\r\n}\r\n\r\n  return(\r\n    <div>\r\n      <p>Utwórz nowe pytanie</p>\r\n     \r\n      <form onSubmit={handleSubmit(onSubmit)} >\r\n      <Input\r\n              fullWidth\r\n              name={`modul`}\r\n              onChange = { (e) => onChange(e) }\r\n              placeholder={`Moduł`} \r\n              inputProps={{ 'aria-label': `modul` }}\r\n            />\r\n        {questions.map((question, q) =>\r\n          <div key={`questions${q}`}>\r\n            <Input\r\n              fullWidth\r\n              name={`questions[${q}].content`}\r\n              inputRef={register()}\r\n              placeholder={`Pytanie ${q+1}`}\r\n              inputProps={{ 'aria-label': `pytanie ${q+1}` }}\r\n            />\r\n          <Input\r\n          inputRef={register()}\r\n          name={`questions[${q}].difficulty`}\r\n          placeholder={`Trudność`} \r\n          type = 'number'\r\n          inputProps={{ 'aria-label': `difficulty` }}\r\n        />\r\n             <Input\r\n          inputRef={register()}\r\n          name={`questions[${q}].correctAnswer`}\r\n          placeholder={`Prawidłowa odpowiedź`} \r\n          type = 'number'\r\n          inputProps={{ 'aria-label': `correctAnswer${q}` }}\r\n        />\r\n            {question.answers.map((answer, a) =>\r\n              <div key={`answer${a}`}>\r\n                <Input\r\n                  name={`questions[${q}].answers[${a}].content`}\r\n                  inputRef={register()}\r\n                  placeholder={`Odp ${a}`}\r\n                  inputProps={{ 'aria-label': `odp ${a}` }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        <Button onClick={ () => addQuestion() }>Dodaj pytanie</Button>\r\n        <Button onClick={ () => removeQuestion() }>Usuń pytanie</Button>\r\n        <Button onClick={ () => clear() }>Wyczyść</Button>\r\n        <Button type=\"submit\">Utwórz pytania</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { Input, Button } from '@material-ui/core/';\r\nimport styled from 'styled-components';\r\nimport { useForm } from 'react-hook-form';\r\nimport { db } from '../../services/firebase';\r\n\r\nexport default () => {\r\n\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const initialInteractiveQuestion = {\r\n    content: '',\r\n    correctAnswer: '',\r\n    difficulty : 0,\r\n    answers: [\r\n      { content: ''},\r\n      { content: ''},\r\n      { content: ''},\r\n      { content: ''},\r\n    ]\r\n  }\r\n \r\n  const [ interactiveQuestions, setInteractiveQuestions ] = React.useState([initialInteractiveQuestion]);\r\n  const [ exists, setExists ] = React.useState(false);\r\n  const [ tempInteractiveQuestions, setTempInteractiveQuestions ] = React.useState([]);\r\n  const [ tempQuestions, setTempQuestions ] = React.useState([]);\r\n  const [ modul, setModul ] = React.useState('');\r\n  \r\n\r\n  const addInteractiveQuestion = () => \r\n  {\r\n    setInteractiveQuestions([...interactiveQuestions, initialInteractiveQuestion])\r\n  }\r\n\r\n  const removeInteractiveQuestion = () => \r\n  {\r\n    const newArr = [...interactiveQuestions];\r\n    newArr.splice(interactiveQuestions.length-1, 1);\r\n    setInteractiveQuestions(newArr);\r\n  }\r\n  \r\n  const onChange = async (e) => \r\n  {\r\n    const mdl = e.target.value;\r\n    setModul(mdl);\r\n    await db.collection(\"excercise\").doc(mdl).get().then(function(doc) {\r\n    if (doc.exists)\r\n     {\r\n        setTempInteractiveQuestions(doc.data().interactiveQuestions);\r\n        setTempQuestions(doc.data().questions);\r\n        setExists(true);\r\n        console.log(\"Document data:\", doc.data().interactiveQuestions);\r\n    }\r\n     else \r\n     {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"No such document!\");\r\n        setExists(false);\r\n    }\r\n}).catch(function(error) \r\n{\r\n    console.log(\"Error getting document:\", error);\r\n});\r\n     \r\n  }\r\n\r\n  const onSubmit = async values => {\r\n\r\n   values.interactiveQuestions.map(int => {int.difficulty = Number(int.difficulty)});\r\n\r\n    if(exists)\r\n    {\r\n    Array.prototype.push.apply(tempInteractiveQuestions,values.interactiveQuestions);\r\n    await db.collection('excercise').doc(modul).update({\r\n      interactiveQuestions : tempInteractiveQuestions,\r\n      questions : tempQuestions\r\n    });\r\n    }\r\n    else\r\n    {\r\n      await db.collection('excercise').doc(modul).set({\r\n        interactiveQuestions : values.interactiveQuestions,\r\n        questions : tempQuestions\r\n      });\r\n    }\r\n  };\r\n\r\nconst clear = () =>\r\n{\r\n  setInteractiveQuestions([]);\r\n}\r\n\r\n  return(\r\n    <div>\r\n      <p>Utwórz nowe pytanie</p>\r\n     \r\n      <form onSubmit={handleSubmit(onSubmit)} >\r\n      <Input\r\n              fullWidth\r\n              name={`modul`}\r\n              onChange = { (e) => onChange(e) }\r\n              placeholder={`Moduł`} \r\n              inputProps={{ 'aria-label': `modul` }}\r\n            />\r\n        {interactiveQuestions.map((interactiveQuestion, q) =>\r\n          <div key={`interactiveQuestions${q}`}>\r\n            <Input\r\n              fullWidth\r\n              name={`interactiveQuestions[${q}].content`}\r\n              inputRef={register()}\r\n              placeholder={`Pytanie ${q+1}`}\r\n              inputProps={{ 'aria-label': `pytanie ${q+1}` }}\r\n            />\r\n              <Input\r\n          inputRef={register()}\r\n          name={`questions[${q}].difficulty`}\r\n          placeholder={`Trudność`} \r\n          type = 'number'\r\n          inputProps={{ 'aria-label': `difficulty` }}\r\n        />\r\n             <Input\r\n          name={`interactiveQuestions[${q}].winCode`}\r\n          inputRef={register()}\r\n          placeholder=\"Prawidłowa sekwencja\"\r\n          inputProps={{ 'aria-label': 'correctAnswer' }}\r\n        />\r\n            {interactiveQuestion.answers.map((slice, s) =>\r\n              <div key={`slices${s}`}>\r\n                <Input\r\n                  name={`interactiveQuestions[${q}].slices[${s}].content`}\r\n                  inputRef={register()}\r\n                  placeholder={`Kawałek ${s}`}\r\n                  inputProps={{ 'aria-label': `odp ${s}` }}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        <Button onClick={ () => addInteractiveQuestion() }>Dodaj pytanie</Button>\r\n        <Button onClick={ () => removeInteractiveQuestion() }>Usuń pytanie</Button>\r\n        <Button onClick={ () => clear() }>Wyczyść</Button>\r\n        <Button type=\"submit\">Utwórz pytania</Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const slice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload\r\n    },\r\n    logout: (state) => {\r\n      state.user = null\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = slice.actions;\r\n\r\nexport const selectCurrentUser = state => state.auth.user;\r\n\r\nexport default slice.reducer;","import React from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {login,logout,selectCurrentUser} from '../features/auth/authSlice';\r\nimport {auth} from '../services/firebase';\r\n\r\nexport default () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const currentUser = useSelector(selectCurrentUser);\r\n\r\n    React.useEffect(() => {\r\n        const setUser = user => {\r\n            user ? dispatch(login({ uid: user.uid, email: user.email })) : dispatch(logout())\r\n     }\r\n    const unsubscribe = auth().onAuthStateChanged(setUser);\r\n\r\n  return () => {\r\n    unsubscribe();\r\n  }\r\n}, [dispatch]);\r\nreturn currentUser;\r\n}","import React,{ useState, useEffect } from 'react';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport useAuthUser from '../../hooks/useAuthUser';\r\nimport { auth } from '../../services/firebase';\r\nimport { IoMdLogIn, IoMdLogOut } from 'react-icons/io'\r\nimport styled from 'styled-components';\r\n\r\nconst ResponsiveToolbar = styled.nav`\r\nheight: 60px;\r\nwidth: 100%;\r\nposition: fixed;\r\nbox-shadow: 2px 2px 2px #ccc;\r\nz-index:5;\r\nuser-select: none;\r\n`;\r\n\r\nconst NavList =  styled.ul`\r\nbox-shadow: 2px 2px 2px #ccc;\r\ndisplay: flex;\r\nmargin-block-start:0;\r\nmargin-block-end:0;\r\npadding-inline-start:0;\r\nheight: 100%;\r\nalign-items: center;\r\ntransition: 0.3s ease all;\r\n@media screen and (max-width: 759px)\r\n{\r\n  height: 100%;\r\n  width: 300px;\r\n  position: fixed;\r\n  left: -240px;\r\n  top: 60px;\r\n  flex-direction:column;\r\n  &.active {\r\n    left: 0px;\r\n}\r\n}\r\n`;\r\n\r\nconst MenuIcon = styled.div`\r\nmargin-block-start:0;\r\nmargin-block-end:0;\r\npadding-inline-start: 10px;\r\npadding: 10px;\r\ncursor:pointer;\r\nvisibility:hidden;\r\n@media screen and (max-width: 759px)\r\n{\r\nvisibility:visible;\r\n  position:fixed;\r\n  left: 5px;\r\n  top: 10px;\r\n}\r\n`;\r\n\r\nconst SiteName = styled.div`\r\nfont-size: 22px;\r\nfont-weight:bold;\r\nmargin-block-start:0;\r\nmargin-block-end:0;\r\npadding-inline-start: 30px;\r\npadding: 10px;\r\n@media screen and (max-width: 759px)\r\n{\r\n  width: calc(100% - 60px);\r\n  text-align : center;\r\n  position:fixed;\r\n  left:60px;\r\n  top: 5px;\r\n}\r\n`;\r\n\r\nconst Menu = styled.div`\r\ndisplay:flex;\r\nalign-items: center;\r\njustify-content: flex-end;\r\nwidth:96%;\r\n@media screen and (max-width: 759px)\r\n{\r\n flex-direction:column;\r\n width:100%;\r\n \r\n}\r\n`;\r\n\r\nconst ListItem = styled.li`\r\nlist-style-type:none;\r\npadding: 15px 20px;\r\ncursor:pointer;\r\ntransition: all 0.4s;\r\n@media screen and (max-width: 759px)\r\n{\r\n padding-left: 0;\r\n padding-right: 0;\r\n width:100%;\r\n}\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  font-weight: bold;\r\n  text-decoration:none;\r\n  display: flex;\r\n  flex-direction:row-reverse;\r\n  align-items: center;\r\n  font-size: 22px;\r\n  @media screen and (max-width: 759px)\r\n{\r\n flex-direction:row;\r\n justify-content:space-between;\r\n margin-left: 20px;\r\n margin-right: 13px;\r\n}\r\n`;\r\n\r\nfunction ResponsiveNavbar({navLinks,background,hoverBackground,linkColor}) {\r\n\r\n  const [ hoverIndex, setHoverIndex ] = useState(-1);\r\n  const [ navOpen, setNavOpen ] = useState(false); \r\n  const currentUser = useAuthUser();\r\n  const dispatch = useDispatch();\r\n\r\n\r\nconst handleLogOut = () =>\r\n{\r\n  auth().signOut();\r\n}\r\n\r\n    return (\r\n        <ResponsiveToolbar style={{ background: background }}>\r\n            <NavList style={{ background: background }} className = {navOpen ? 'active' : ''}>\r\n             <MenuIcon onClick = {() => setNavOpen(!navOpen)} >\r\n               <Icon style={{color:linkColor}}>menu</Icon>\r\n             </MenuIcon>\r\n        <SiteName style={{color:linkColor}}>LearnEnglish</SiteName>\r\n            <Menu>\r\n    {navLinks.map((link,index) => \r\n    <ListItem\r\n     key = {index}\r\n     onMouseEnter = {()=> setHoverIndex(index)}\r\n     onMouseLeave = {() => setHoverIndex(-1)}\r\n     style = {{background: hoverIndex === index ? hoverBackground : '', cursor:'pointer'}}>\r\n        <StyledLink style = {{color:linkColor}} to = {`/education/${link.text}`}>{link.text }<Icon style={{fontSize:22,marginRight:10}}>{link.icon}</Icon></StyledLink>\r\n    </ListItem>)}\r\n    <ListItem \r\n      onMouseEnter = {()=> setHoverIndex(navLinks.length)}\r\n      onMouseLeave = {() => setHoverIndex(-1)}\r\n      style = {{background: hoverIndex === navLinks.length ? hoverBackground : '', cursor:'pointer'}}>\r\n      {currentUser ?\r\n       <StyledLink onClick = { () => handleLogOut() } to = '/login' style = {{color:linkColor}}>Wyloguj<IoMdLogOut style={{fontSize:22,marginRight:10}}/></StyledLink > \r\n       : <StyledLink to = '/login' style = {{color:linkColor}}>Zaloguj<IoMdLogIn style={{fontSize:22,marginRight:10}}/></StyledLink> }\r\n       </ListItem>\r\n    </Menu>\r\n            </NavList>\r\n        </ResponsiveToolbar>\r\n        \r\n       \r\n    )\r\n}\r\nexport default ResponsiveNavbar;","import React from 'react';\r\nimport {Button} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectCurrentUser } from '../../features/auth/authSlice';\r\n\r\n\r\nexport default () =>\r\n{\r\n    const currentUser = useSelector(selectCurrentUser);\r\n    return (\r\n        <div>\r\n            Hey, {currentUser?.email}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Login from './features/auth/Login';\r\nimport Education from './features/education/Education';\r\nimport NewEducation from './features/education/newEducation';\r\nimport Excercise from './features/excercise/Excercise';\r\nimport NewQuestion from './features/excercise/newQuestion';\r\nimport NewInteractiveQuestion from './features/excercise/newInteractiveQuestion';\r\nimport ResponsiveNavbar from './layout/ResponsiveNavbar';\r\nimport useAuthUser from './hooks/useAuthUser';\r\nimport Account from './features/auth/Account';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const currentUser = useAuthUser();\r\n  const navLinks = [\r\n  {\r\n    text:\"Transport\",\r\n    icon:\"flight\"\r\n  },\r\n  {\r\n    text:\"Parts of the body\",\r\n    icon:\"emoji_people\"\r\n  },\r\n  {\r\n    text:\"Food\",\r\n    icon:\"fastfood\"\r\n  }\r\n]\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        currentUser ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )}\r\n    />);}\r\n\r\n  return (\r\n    <React.Fragment>\r\n       <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n      <ResponsiveNavbar \r\n      navLinks = {navLinks}\r\n      background = '#333333'\r\n      hoverBackground = '#888'\r\n      linkColor = 'palevioletred'\r\n      ></ResponsiveNavbar>\r\n      <div className = \"App\">\r\n      <Switch>\r\n        <Route exact path = \"/\"></Route>\r\n        <Route path = \"/login\" component = {Login}></Route>\r\n        {\r\n          //3 Routy do rozbudowy bazy w przyszłości możliwe, że będzie panel Admina w którym będzie do nich dostęp tylko z poziomu administracji\r\n        }\r\n        \r\n        <Route path = \"/createEducation\" component = {NewEducation}></Route>\r\n        <Route path = \"/createQuestion\" component = {NewQuestion}></Route>\r\n        <Route path = \"/createInteractiveQuestion\" component = {NewInteractiveQuestion}></Route>\r\n        <PrivateRoute path = \"/account\"><Account/></PrivateRoute>\r\n        <Route path = \"/excercise/:modul\" component = {Excercise}></Route>\r\n        <Route path = \"/education/:modul\" component = {Education}></Route>\r\n      </Switch>\r\n      </div>\r\n    </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit';\r\nimport excerciseReducer from '../features/excercise/excerciseSlice';\r\nimport educationReducer from '../features/education/educationSlice';\r\nimport authReducer from '../features/auth/authSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    education: educationReducer,\r\n    excercise: excerciseReducer,\r\n    auth: authReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}